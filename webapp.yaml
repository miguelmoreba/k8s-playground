apiVersion: apps/v1 # Get this from the k8s site
kind: Deployment
metadata:
  name: webapp-deployment
  labels: # Labels are key-value pairs, there can be many of these
    app: webapp
spec:
  replicas: 1 # As many as needed since it's a stateless service
  selector:
    matchLabels: # This defines that all pods that match this label (app: webapp) belong to this deployment. 
      app: webapp
  template: # This defines the blueprint for the pods
    metadata:
      labels:  # Labels are key-value pairs, there can be many of these
        app: webapp
    spec: # Deployment specific specification
      containers: # List of containers, although normally it's just one
      - name: webapp # If there are multiple replicas, each pod would have its own name (webapp-101, webapp-111, etc)
        image: nanajanashia/k8s-demo-app:v1.0
        ports:
        - containerPort: 3000
        env:
        - name: USER_NAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-user
        - name: USER_PWD
          valueFrom:
            secretKeyRef: 
              name: mongo-secret
              key: mongo-password
        - name: DB_URL
          valueFrom:
            configMapKeyRef: # This is how you reference a config map key
              name: mongo-config
              key: mongo-url
--- # This could very well be in a different file, but makes sense to have them together (all deployments need services)/ In YAML, you separate with ---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
spec:
  type: NodePort # Expose the service to the outside world
  selector: # Mechanism to forward the request to the pods (matching on the label of the pods that belong to the service)
    app: webapp
  ports:
    - protocol: TCP
      port: 3000 # or whatever, it is the port where the service is exposed
      targetPort: 3000 # same as the container port of the deployment above
      nodePort: 30100